[
  {
    "id": 1,
    "question": "How do you import a function named `add` from a module named `math_utils`?",
    "options": [
      "import add from math_utils",
      "from math_utils import add",
      "import math_utils.add",
      "add from math_utils"
    ],
    "correctAnswers": [
      1
    ],
    "explanation": "The correct syntax is `from math_utils import add`.",
    "topic": "Modules and Packages"
  },
  {
    "id": 2,
    "question": "Which of the following statements is true about Python modules?",
    "options": [
      "A module can contain only variables.",
      "A module must always have a main function.",
      "You can import a module using the `import` keyword.",
      "Modules cannot be reused across different scripts."
    ],
    "correctAnswers": [
      2
    ],
    "explanation": "Modules can be imported using the `import` keyword. They can contain functions, classes, and variables.",
    "topic": "Modules and Packages"
  },
  {
    "id": 3,
    "question": "What does the `__init__.py` file do in a Python package?",
    "options": [
      "It initializes variables in a module.",
      "It marks a directory as a Python package.",
      "It is required to run Python scripts.",
      "It handles memory allocation in Python."
    ],
    "correctAnswers": [
      1
    ],
    "explanation": "`__init__.py` indicates to Python that a directory should be treated as a package.",
    "topic": "Modules and Packages"
  },
  {
    "id": 4,
    "question": "What happens if a module is not found during import?",
    "options": [
      "NameError",
      "ImportError",
      "SyntaxError",
      "ModuleNotFoundError"
    ],
    "correctAnswers": [
      3
    ],
    "explanation": "`ModuleNotFoundError` is raised when the module isn't found.",
    "topic": "Modules and Packages"
  },
  {
    "id": 5,
    "question": "What will be the output of `dir(math)`?",
    "options": [
      "List of all variables in Python",
      "Syntax error",
      "List of all attributes and functions of the math module",
      "Nothing"
    ],
    "correctAnswers": [
      2
    ],
    "explanation": "`dir(math)` returns all attributes and methods of the math module.",
    "topic": "Modules and Packages"
  },
  {
    "id": 6,
    "question": "Which of these is the correct way to import all contents of a module?",
    "options": [
      "import all from module",
      "import module.*",
      "from module import *",
      "module import all"
    ],
    "correctAnswers": [
      2
    ],
    "explanation": "`from module import *` imports all contents of the module.",
    "topic": "Modules and Packages"
  },
  {
    "id": 7,
    "question": "What will be the output of the following code?\n\ntry:\n    1 / 0\nexcept ZeroDivisionError:\n    print('Zero Division')\nexcept:\n    print('Other Error')",
    "options": [
      "Zero Division",
      "Other Error",
      "Error",
      "None"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "The ZeroDivisionError is explicitly caught, so 'Zero Division' will be printed.",
    "topic": "Exceptions"
  },
  {
    "id": 8,
    "question": "Which keyword is used to raise an exception in Python?",
    "options": [
      "throw",
      "raise",
      "except",
      "assert"
    ],
    "correctAnswers": [
      1
    ],
    "explanation": "`raise` is the correct keyword used to raise an exception in Python.",
    "topic": "Exceptions"
  },
  {
    "id": 9,
    "question": "What is the output?\n\ntry:\n    x = int('abc')\nexcept ValueError:\n    print('Invalid')",
    "options": [
      "Invalid",
      "abc",
      "None",
      "Error"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "The `int('abc')` raises a ValueError which is caught by the except block.",
    "topic": "Exceptions"
  },
  {
    "id": 10,
    "question": "What is the purpose of the finally block in exception handling?",
    "options": [
      "To execute code only if no exception occurs",
      "To handle all types of exceptions",
      "To execute code regardless of exception occurrence",
      "To ignore exceptions"
    ],
    "correctAnswers": [
      2
    ],
    "explanation": "The `finally` block is used to execute code regardless of whether an exception occurred or not.",
    "topic": "Exceptions"
  },
  {
    "id": 11,
    "question": "Which of the following exceptions is raised when accessing a variable that doesn\u2019t exist?",
    "options": [
      "TypeError",
      "ValueError",
      "NameError",
      "IndexError"
    ],
    "correctAnswers": [
      2
    ],
    "explanation": "Accessing an undefined variable raises a NameError.",
    "topic": "Exceptions"
  },
  {
    "id": 12,
    "question": "What is the result of 'hello'.capitalize()?",
    "options": [
      "Hello",
      "hello",
      "HELLO",
      "Hello!"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "The `capitalize()` method converts the first character to uppercase.",
    "topic": "Strings"
  },
  {
    "id": 13,
    "question": "What is the output of:\n\nprint('a' * 3)",
    "options": [
      "aaa",
      "a a a",
      "aa a",
      "Error"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "Multiplying a string repeats it: 'a' * 3 = 'aaa'.",
    "topic": "Strings"
  },
  {
    "id": 14,
    "question": "Which of the following methods is used to check if all characters in a string are digits?",
    "options": [
      "isalpha()",
      "isdigit()",
      "isalnum()",
      "isnumeric()"
    ],
    "correctAnswers": [
      1
    ],
    "explanation": "`isdigit()` checks if all characters in a string are digits.",
    "topic": "Strings"
  },
  {
    "id": 15,
    "question": "What is the output of:\n\nprint('Python'[1:4])",
    "options": [
      "yth",
      "ytho",
      "Pyt",
      "tho"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "Slicing [1:4] includes characters at index 1, 2, 3 \u2192 'yth'.",
    "topic": "Strings"
  },
  {
    "id": 16,
    "question": "What is returned by 'abc'.find('d')?",
    "options": [
      "-1",
      "None",
      "0",
      "Error"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "`find()` returns -1 if the character is not found.",
    "topic": "Strings"
  },
  {
    "id": 17,
    "question": "Which escape character is used for a newline?",
    "options": [
      "\\n",
      "\\t",
      "\\r",
      "\\\\"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "`\\n` is the escape character for a new line.",
    "topic": "Strings"
  },
  {
    "id": 18,
    "question": "What does the method `strip()` do?",
    "options": [
      "Removes all characters",
      "Trims whitespace",
      "Replaces whitespace",
      "Adds space"
    ],
    "correctAnswers": [
      1
    ],
    "explanation": "`strip()` removes leading and trailing whitespace.",
    "topic": "Strings"
  },
  {
    "id": 19,
    "question": "What is the output of:\n\nprint('abcDEF'.lower())",
    "options": [
      "abcdef",
      "ABCDEF",
      "abcDEF",
      "Abcdef"
    ],
    "correctAnswers": [
      0
    ],
    "explanation": "`lower()` converts all characters to lowercase.",
    "topic": "Strings"
  },
    {
        "id": 20,
        "question": "What is the output of:\n\nprint('Hello'.replace('l', 'x'))",
        "options": [
        "Hexxo",
        "Hello",
        "Hxxo",
        "Helo"
        ],
        "correctAnswers": [
        0
        ],
        "explanation": "`replace()` replaces all occurrences of 'l' with 'x'.",
        "topic": "Strings"
    },
    {
    "id": 21,
    "question": "Which of the following statements correctly defines a module in Python?",
    "options": [
      "A module is a compiled C extension.",
      "A module is a file containing Python definitions and statements.",
      "A module is a built-in object that only contains variables.",
      "A module is a special keyword for imports."
    ],
    "correctAnswers": [1],
    "explanation": "A Python module is simply a file that contains Python code – definitions and statements.",
    "topic": "Modules and Packages"
  },
  {
    "id": 22,
    "question": "What will be the result of the following code?\n\nx = lambda a, b: a * b\nprint(x(2, 3))",
    "options": ["2", "3", "5", "6"],
    "correctAnswers": [3],
    "explanation": "The lambda function takes two arguments and multiplies them: 2 * 3 = 6.",
    "topic": "Miscellaneous"
  },
  {
    "id": 23,
    "question": "What is the output of the following code?\n\nprint(\"hello\"[1:4])",
    "options": ["hell", "ell", "llo", "hel"],
    "correctAnswers": [1],
    "explanation": "String slicing [1:4] returns characters from index 1 to 3 (not including 4): 'ell'.",
    "topic": "Strings"
  },
  {
    "id": 24,
    "question": "What does the following code do?\n\nimport math\nprint(math.floor(4.7))",
    "options": ["4", "5", "4.7", "Error"],
    "correctAnswers": [0],
    "explanation": "`math.floor()` returns the largest integer less than or equal to the input. So `floor(4.7)` = 4.",
    "topic": "Modules and Packages"
  },
  {
    "id": 25,
    "question": "Which exception is raised when you try to access an undefined variable?",
    "options": ["SyntaxError", "TypeError", "NameError", "IndexError"],
    "correctAnswers": [2],
    "explanation": "Trying to access an undefined variable raises a NameError in Python.",
    "topic": "Exceptions"
  },
  {
    "id": 26,
    "question": "What will be printed by the following code?\n\ndef add(a=2, b=3):\n    return a + b\n\nprint(add())",
    "options": ["5", "2", "3", "Error"],
    "correctAnswers": [0],
    "explanation": "Default parameters are used: add(2, 3) → 5.",
    "topic": "Functions"
  },
  {
    "id": 27,
    "question": "Which method is used to add an item to the end of a list?",
    "options": ["add()", "insert()", "extend()", "append()"],
    "correctAnswers": [3],
    "explanation": "`append()` adds an item to the end of a list.",
    "topic": "Data Types"
  },
  {
    "id":   28,
    "question": "Which of the following is not a valid string method in Python?",
    "options": ["split()", "join()", "append()", "upper()"],
    "correctAnswers": [2],
    "explanation": "`append()` is used with lists, not strings.",
    "topic": "Strings"
  },
  {
    "id": 29,
    "question": "What is the output?\n\nx = 10\ndef func():\n    x = 5\nfunc()\nprint(x)",
    "options": ["5", "10", "Error", "None"],
    "correctAnswers": [1],
    "explanation": "The global `x` is not modified inside the function because `x` is redefined locally inside `func()`.",
    "topic": "Functions"
  },
  {
    "id": 30,
    "question": "Which of the following statements about Python packages is true?",
    "options": [
      "A package is a single file.",
      "A package cannot contain sub-packages.",
      "A package is a directory with an __init__.py file.",
      "Packages are only available in Python 3.10 and above."
    ],
    "correctAnswers": [2],
    "explanation": "A package is a directory with an `__init__.py` file to make it a package.",
    "topic": "Modules and Packages"
  },
  {
    "id": 31,
    "question": "Which operator is used for exponentiation in Python?",
    "options": ["^", "**", "//", "%"],
    "correctAnswers": [1],
    "explanation": "`**` is used for exponentiation. For example, `2 ** 3` equals 8.",
    "topic": "Operators"
  },
  {
    "id": 32,
    "question": "What is the output?\n\nx = [1, 2, 3]\nprint(x[::-1])",
    "options": ["[1, 2, 3]", "[3, 2, 1]", "[1, 3, 2]", "Error"],
    "correctAnswers": [1],
    "explanation": "`[::-1]` reverses the list.",
    "topic": "Data Types"
  },
  {
    "id": 33,
    "question": "Which of the following creates a class in Python?",
    "options": [
      "def MyClass():",
      "class MyClass:",
      "function MyClass():",
      "new class MyClass:"
    ],
    "correctAnswers": [1],
    "explanation": "Python uses the `class` keyword to define classes.",
    "topic": "OOP"
  },
  {
    "id": 34,
    "question": "Which method is used to read a file line by line?",
    "options": ["readlines()", "read()", "readline()", "scan()"],
    "correctAnswers": [0],
    "explanation": "`readlines()` reads the entire file and returns a list of lines.",
    "topic": "File I/O"
  },
  {
    "id": 35,
    "question": "Which statement is true about lambdas in Python?",
    "options": [
      "They are defined using the def keyword.",
      "They can have multiple expressions.",
      "They are anonymous functions.",
      "They always return None."
    ],
    "correctAnswers": [2],
    "explanation": "Lambdas are anonymous functions defined using the `lambda` keyword.",
    "topic": "Miscellaneous"
  },
  {
    "id": 36,
    "question": "What is the output of:\n\nprint(type((5)))",
    "options": ["<class 'int'>", "<class 'tuple'>", "<class 'list'>", "Error"],
    "correctAnswers": [0],
    "explanation": "`(5)` is just an integer in parentheses. Use `(5,)` for a tuple.",
    "topic": "Data Types"
  },
  {
    "id": 37,
    "question": "Which exception will be raised by the following code?\n\nint('abc')",
    "options": ["TypeError", "NameError", "ValueError", "IndexError"],
    "correctAnswers": [2],
    "explanation": "Trying to convert a non-numeric string to int raises a ValueError.",
    "topic": "Exceptions"
  },
  {
    "id": 38,
    "question": "What is the output?\n\nprint(\"Hello\" * 2)",
    "options": ["HelloHello", "Hello2", "Error", "2Hello"],
    "correctAnswers": [0],
    "explanation": "String repetition works with `*`. 'Hello' * 2 = 'HelloHello'.",
    "topic": "Strings"
  },
  {
    "id": 39,
    "question": "Which of these is a valid list comprehension in Python?",
    "options": [
      "[x for x in range(5)]",
      "x in [range(5)]",
      "{x: x for x in 5}",
      "for x in range(5): return x"
    ],
    "correctAnswers": [0],
    "explanation": "List comprehensions use the syntax `[expression for item in iterable]`.",
    "topic": "Miscellaneous"
  },
  {
    "id":  40,
    "question": "Which function returns the number of characters in a string?",
    "options": ["count()", "length()", "len()", "size()"],
    "correctAnswers": [2],
    "explanation": "The built-in `len()` function returns the length of a string.",
    "topic": "Strings"
  }
]

